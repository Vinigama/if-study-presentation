# Generated by Django 3.2.9 on 2022-10-09 21:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('conteudos', '0027_auto_20221009_1837'),
    ]

    operations = [
        migrations.AddField(
            model_name='comentario',
            name='criador',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='criador', to='usuarios.perfil'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='comentario',
            name='dislike',
            field=models.ManyToManyField(blank=True, related_name='dislike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comentario',
            name='like',
            field=models.ManyToManyField(blank=True, related_name='like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conteudo',
            name='criador',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='usuarios.perfil'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='conteudo',
            name='dislike',
            field=models.ManyToManyField(blank=True, related_name='_conteudos_conteudo_dislike_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conteudo',
            name='like',
            field=models.ManyToManyField(blank=True, related_name='_conteudos_conteudo_like_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conteudo',
            name='visualizacao',
            field=models.ManyToManyField(blank=True, related_name='_conteudos_conteudo_visualizacao_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='conteudos',
            field=models.ManyToManyField(to='conteudos.Conteudo'),
        ),
    ]
